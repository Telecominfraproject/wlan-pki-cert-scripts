HOME                   = .
RANDFILE               = $ENV::HOME/.rnd

input_password         = mypassword
output_password        = mypassword

####################################################################
[ ca ]
default_ca             = CA_default      # The default ca section

[ CA_default ]

dir                    = ./testCA        # Where everything is kept
certs                  = $dir/certs        # Where the issued certs are kept
crl_dir                = $dir/crl        # Where the issued crl are kept
database               = $dir/index.txt    # database index file.
unique_subject         = no            # Set to 'no' to allow creation of
                       # several certs with same subject.
new_certs_dir          = $dir/newcerts        # default place for new certs.

certificate            = $dir/cacert.pem     # The CA certificate
serial                 = $dir/serial.txt         # The current serial number
crlnumber              = $dir/crlnumber    # the current crl number
                       # must be commented out to leave a V1 CRL
crl                    = $dir/crl.pem         # The current CRL
private_key            = $dir/private/cakey.pem # The private key

default_days           = 1000         # How long to certify for
default_crl_days       = 30           # How long before next CRL
default_md             = sha256       # Use public key default MD
preserve               = no           # Keep passed DN ordering


x509_extensions        = ca_extensions # The extensions to add to the cert

email_in_dn            = no            # Don't concat the email in the DN
copy_extensions        = copy          # Required to copy SANs from CSR to cert

crl_extensions         = crl_ext

####################################################################
[ req ]
default_bits           = 4096
default_keyfile        = generated/cakey.pem
distinguished_name     = ca_distinguished_name
x509_extensions        = ca_extensions
string_mask            = utf8only

[ crl_ext ]
# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always

####################################################################
[ ca_distinguished_name ]
countryName                    = Country Name (2 letter code)
countryName_default            = CA

stateOrProvinceName            = State or Province Name (full name)
stateOrProvinceName_default    = Ontario

localityName                   = Locality Name (eg, city)
localityName_default           = Ottawa

organizationName               = Organization Name (eg, company)
organizationName_default       = ConnectUs Technologies

organizationalUnitName         = Organizational Unit (eg, division)
organizationalUnitName_default = Testing Department

commonName                     = Common Name (e.g. server FQDN or YOUR name)
commonName_default             = Test CA Not For Deployment

emailAddress                   = Email Address
emailAddress_default           = test@example.com

####################################################################
[ ca_extensions ]

subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:true
keyUsage               = keyCertSign, cRLSign

####################################################################
[ signing_policy ]
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

####################################################################
[ signing_req_server ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature, keyEncipherment

[ signing_req_client ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature

[ policy_match ]
organizationName       = match
